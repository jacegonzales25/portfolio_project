services:
  postgres:
    image: postgres:latest
    container_name: postgresDB
    restart: always
    env_file: 
     - path: ./backend/.env  # Load environment variables
       required: true
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}"]
      interval: 10s
      retries: 5
      start_period: 10s

  backend:
    env_file: 
     - path: ./backend/.env  # Load environment variables
       required: true
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network
    command: sh -c "npx prisma db push && npx prisma db seed && npm run start"

  redis:
    env_file: 
     - path: ./backend/.env  # Load environment variables
       required: true
    image: redis:latest
    container_name: redisService
    restart: always
    command: redis-server --requirepass ${REDIS_PASSWORD}
    networks:
      - app-network
    volumes:
      - redisdata:/data

networks:
  app-network:

volumes:
  pgdata:
  redisdata:
